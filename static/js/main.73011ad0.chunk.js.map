{"version":3,"sources":["resources/logo.svg","resources/SVGLoader.js","Test2.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SVGLoader","manager","this","undefined","DefaultLoadingManager","prototype","constructor","load","url","onLoad","onProgress","onError","scope","loader","FileLoader","setPath","path","text","parse","value","parseArcCommand","rx","ry","x_axis_rotation","large_arc_flag","sweep_flag","start","end","Math","PI","abs","dx2","x","dy2","y","x1p","cos","sin","y1p","rxs","rys","x1ps","y1ps","cr","s","sqrt","dq","pq","q","max","cxp","cyp","cx","cy","theta","svgAngle","delta","currentPath","absellipse","ux","uy","vx","vy","dot","len","ang","acos","min","parseStyle","node","style","Object","assign","hasAttribute","fill","getAttribute","isVisible","getReflection","a","b","parseFloats","string","array","split","i","length","number","indexOf","lastIndexOf","splice","parseFloat","getTransformScaleX","m","te","elements","getTransformScaleY","paths","transformStack","tempTransform0","Matrix3","tempTransform1","tempTransform2","tempTransform3","currentTransform","parseNode","nodeType","transform","transformsTexts","tIndex","transformText","openParPos","closeParPos","transformType","substr","identity","tx","ty","translate","angle","rotate","multiplyMatrices","scaleX","scaleY","scale","set","tan","premultiply","parseTransformNode","copy","push","getNodeTransform","nodeName","ShapePath","color","setStyle","point","Vector2","control","firstPoint","isFirstPoint","doSetFirstPoint","commands","match","l","command","type","charAt","data","trim","numbers","j","jl","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","clone","autoClose","curves","currentPoint","parsePathNode","w","h","parseRectNode","index","replace","parsePolygonNode","parsePolylineNode","r","subpath","Path","absarc","subPaths","parseCircleNode","parseEllipseNode","x1","y1","x2","y2","parseLineNode","transfVec2","v2","tempV3","applyMatrix3","isTransformRotated","tempV2","Vector3","n","subPath","curve","isLineCurve","v1","isCubicBezierCurve","v0","v3","isQuadraticBezierCurve","isEllipseCurve","aX","aY","xRadius","yRadius","transformPath","nodes","childNodes","pop","DOMParser","parseFromString","documentElement","console","log","deg","THREE","degToRad","loaders","Promise","res","LogoSVG","shapes","flat","map","group","toShapes","shape","GlobalStyle","createGlobalStyle","_templateObject","FullPage","styled","div","withConfig","displayName","componentId","Logo","Text","ThreeFull","Graphic","_ref","mouse","extrudeSettings","steps","depth","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudeSettings2","react_default","createElement","three","position","interpolate","_ref2","key","mesh","rotation","opacity","transparent","attach","roughness","side","metalness","args","Cursor","_ref3","pointLight2","object","intensity","sphereSize","refractionRatio","Scene","_ref4","_useState","useState","_useState2","slicedToArray","setShape","setTheShape","then","useEffect","pointLight","Fragment","App","_useSpring","useSpring","_useSpring2","onMouseMove","useCallback","_ref5","clientX","clientY","window","innerWidth","innerHeight","web","concat","dist","invalidateFrameloop","camera","fov","near","far","Boolean","location","hostname","ReactDOM","render","Test2","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.73011ad0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.23d40bdd.svg\";","import { DefaultLoadingManager, FileLoader, Matrix3, Path, ShapePath, Vector2, Vector3 } from 'three'\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author zz85 / http://joshuakoo.com/\n * @author yomboprime / https://yombo.org\n */\n\nvar SVGLoader = function(manager) {\n  this.manager = manager !== undefined ? manager : DefaultLoadingManager\n}\n\nSVGLoader.prototype = {\n  constructor: SVGLoader,\n\n  load: function(url, onLoad, onProgress, onError) {\n    var scope = this\n\n    var loader = new FileLoader(scope.manager)\n    loader.setPath(scope.path)\n    loader.load(\n      url,\n      function(text) {\n        onLoad(scope.parse(text))\n      },\n      onProgress,\n      onError\n    )\n  },\n\n  setPath: function(value) {\n    this.path = value\n    return this\n  },\n\n  parse: function(text) {\n    function parseNode(node, style) {\n      if (node.nodeType !== 1) return\n\n      var transform = getNodeTransform(node)\n\n      var path = null\n\n      switch (node.nodeName) {\n        case 'svg':\n          break\n\n        case 'g':\n          style = parseStyle(node, style)\n          break\n\n        case 'path':\n          style = parseStyle(node, style)\n          if (node.hasAttribute('d') && isVisible(style)) path = parsePathNode(node, style)\n          break\n\n        case 'rect':\n          style = parseStyle(node, style)\n          if (isVisible(style)) path = parseRectNode(node, style)\n          break\n\n        case 'polygon':\n          style = parseStyle(node, style)\n          if (isVisible(style)) path = parsePolygonNode(node, style)\n          break\n\n        case 'polyline':\n          style = parseStyle(node, style)\n          if (isVisible(style)) path = parsePolylineNode(node, style)\n          break\n\n        case 'circle':\n          style = parseStyle(node, style)\n          if (isVisible(style)) path = parseCircleNode(node, style)\n          break\n\n        case 'ellipse':\n          style = parseStyle(node, style)\n          if (isVisible(style)) path = parseEllipseNode(node, style)\n          break\n\n        case 'line':\n          style = parseStyle(node, style)\n          if (isVisible(style)) path = parseLineNode(node, style)\n          break\n      }\n\n      if (path) {\n        transformPath(path, currentTransform)\n\n        paths.push(path)\n      }\n\n      var nodes = node.childNodes\n\n      for (var i = 0; i < nodes.length; i++) {\n        parseNode(nodes[i], style)\n      }\n\n      if (transform) {\n        currentTransform.copy(transformStack.pop())\n      }\n    }\n\n    function parsePathNode(node, style) {\n      var path = new ShapePath()\n      path.color.setStyle(style.fill)\n\n      var point = new Vector2()\n      var control = new Vector2()\n\n      var firstPoint = new Vector2()\n      var isFirstPoint = true\n      var doSetFirstPoint = false\n\n      var d = node.getAttribute('d')\n\n      // console.log( d );\n\n      var commands = d.match(/[a-df-z][^a-df-z]*/gi)\n\n      for (var i = 0, l = commands.length; i < l; i++) {\n        var command = commands[i]\n\n        var type = command.charAt(0)\n        var data = command.substr(1).trim()\n\n        if (isFirstPoint === true) {\n          doSetFirstPoint = true\n          isFirstPoint = false\n        }\n\n        switch (type) {\n          case 'M':\n            var numbers = parseFloats(data)\n            for (var j = 0, jl = numbers.length; j < jl; j += 2) {\n              point.x = numbers[j + 0]\n              point.y = numbers[j + 1]\n              control.x = point.x\n              control.y = point.y\n              if (j === 0) {\n                path.moveTo(point.x, point.y)\n              } else {\n                path.lineTo(point.x, point.y)\n              }\n              if (j === 0 && doSetFirstPoint === true) firstPoint.copy(point)\n            }\n            break\n\n          case 'H':\n            var numbers = parseFloats(data)\n            for (var j = 0, jl = numbers.length; j < jl; j++) {\n              point.x = numbers[j]\n              control.x = point.x\n              control.y = point.y\n              path.lineTo(point.x, point.y)\n              if (j === 0 && doSetFirstPoint === true) firstPoint.copy(point)\n            }\n            break\n\n          case 'V':\n            var numbers = parseFloats(data)\n            for (var j = 0, jl = numbers.length; j < jl; j++) {\n              point.y = numbers[j]\n              control.x = point.x\n              control.y = point.y\n              path.lineTo(point.x, point.y)\n              if (j === 0 && doSetFirstPoint === true) firstPoint.copy(point)\n            }\n            break\n\n          case 'L':\n            var numbers = parseFloats(data)\n            for (var j = 0, jl = numbers.length; j < jl; j += 2) {\n              point.x = numbers[j + 0]\n              point.y = numbers[j + 1]\n              control.x = point.x\n              control.y = point.y\n              path.lineTo(point.x, point.y)\n              if (j === 0 && doSetFirstPoint === true) firstPoint.copy(point)\n            }\n            break\n\n          case 'C':\n            var numbers = parseFloats(data)\n            for (var j = 0, jl = numbers.length; j < jl; j += 6) {\n              path.bezierCurveTo(\n                numbers[j + 0],\n                numbers[j + 1],\n                numbers[j + 2],\n                numbers[j + 3],\n                numbers[j + 4],\n                numbers[j + 5]\n              )\n              control.x = numbers[j + 2]\n              control.y = numbers[j + 3]\n              point.x = numbers[j + 4]\n              point.y = numbers[j + 5]\n              if (j === 0 && doSetFirstPoint === true) firstPoint.copy(point)\n            }\n            break\n\n          case 'S':\n            var numbers = parseFloats(data)\n            for (var j = 0, jl = numbers.length; j < jl; j += 4) {\n              path.bezierCurveTo(\n                getReflection(point.x, control.x),\n                getReflection(point.y, control.y),\n                numbers[j + 0],\n                numbers[j + 1],\n                numbers[j + 2],\n                numbers[j + 3]\n              )\n              control.x = numbers[j + 0]\n              control.y = numbers[j + 1]\n              point.x = numbers[j + 2]\n              point.y = numbers[j + 3]\n              if (j === 0 && doSetFirstPoint === true) firstPoint.copy(point)\n            }\n            break\n\n          case 'Q':\n            var numbers = parseFloats(data)\n            for (var j = 0, jl = numbers.length; j < jl; j += 4) {\n              path.quadraticCurveTo(numbers[j + 0], numbers[j + 1], numbers[j + 2], numbers[j + 3])\n              control.x = numbers[j + 0]\n              control.y = numbers[j + 1]\n              point.x = numbers[j + 2]\n              point.y = numbers[j + 3]\n              if (j === 0 && doSetFirstPoint === true) firstPoint.copy(point)\n            }\n            break\n\n          case 'T':\n            var numbers = parseFloats(data)\n            for (var j = 0, jl = numbers.length; j < jl; j += 2) {\n              var rx = getReflection(point.x, control.x)\n              var ry = getReflection(point.y, control.y)\n              path.quadraticCurveTo(rx, ry, numbers[j + 0], numbers[j + 1])\n              control.x = rx\n              control.y = ry\n              point.x = numbers[j + 0]\n              point.y = numbers[j + 1]\n              if (j === 0 && doSetFirstPoint === true) firstPoint.copy(point)\n            }\n            break\n\n          case 'A':\n            var numbers = parseFloats(data)\n            for (var j = 0, jl = numbers.length; j < jl; j += 7) {\n              var start = point.clone()\n              point.x = numbers[j + 5]\n              point.y = numbers[j + 6]\n              control.x = point.x\n              control.y = point.y\n              parseArcCommand(\n                path,\n                numbers[j],\n                numbers[j + 1],\n                numbers[j + 2],\n                numbers[j + 3],\n                numbers[j + 4],\n                start,\n                point\n              )\n              if (j === 0 && doSetFirstPoint === true) firstPoint.copy(point)\n            }\n            break\n\n          //\n\n          case 'm':\n            var numbers = parseFloats(data)\n            for (var j = 0, jl = numbers.length; j < jl; j += 2) {\n              point.x += numbers[j + 0]\n              point.y += numbers[j + 1]\n              control.x = point.x\n              control.y = point.y\n              if (j === 0) {\n                path.moveTo(point.x, point.y)\n              } else {\n                path.lineTo(point.x, point.y)\n              }\n              if (j === 0 && doSetFirstPoint === true) firstPoint.copy(point)\n            }\n            break\n\n          case 'h':\n            var numbers = parseFloats(data)\n            for (var j = 0, jl = numbers.length; j < jl; j++) {\n              point.x += numbers[j]\n              control.x = point.x\n              control.y = point.y\n              path.lineTo(point.x, point.y)\n              if (j === 0 && doSetFirstPoint === true) firstPoint.copy(point)\n            }\n            break\n\n          case 'v':\n            var numbers = parseFloats(data)\n            for (var j = 0, jl = numbers.length; j < jl; j++) {\n              point.y += numbers[j]\n              control.x = point.x\n              control.y = point.y\n              path.lineTo(point.x, point.y)\n              if (j === 0 && doSetFirstPoint === true) firstPoint.copy(point)\n            }\n            break\n\n          case 'l':\n            var numbers = parseFloats(data)\n            for (var j = 0, jl = numbers.length; j < jl; j += 2) {\n              point.x += numbers[j + 0]\n              point.y += numbers[j + 1]\n              control.x = point.x\n              control.y = point.y\n              path.lineTo(point.x, point.y)\n              if (j === 0 && doSetFirstPoint === true) firstPoint.copy(point)\n            }\n            break\n\n          case 'c':\n            var numbers = parseFloats(data)\n            for (var j = 0, jl = numbers.length; j < jl; j += 6) {\n              path.bezierCurveTo(\n                point.x + numbers[j + 0],\n                point.y + numbers[j + 1],\n                point.x + numbers[j + 2],\n                point.y + numbers[j + 3],\n                point.x + numbers[j + 4],\n                point.y + numbers[j + 5]\n              )\n              control.x = point.x + numbers[j + 2]\n              control.y = point.y + numbers[j + 3]\n              point.x += numbers[j + 4]\n              point.y += numbers[j + 5]\n              if (j === 0 && doSetFirstPoint === true) firstPoint.copy(point)\n            }\n            break\n\n          case 's':\n            var numbers = parseFloats(data)\n            for (var j = 0, jl = numbers.length; j < jl; j += 4) {\n              path.bezierCurveTo(\n                getReflection(point.x, control.x),\n                getReflection(point.y, control.y),\n                point.x + numbers[j + 0],\n                point.y + numbers[j + 1],\n                point.x + numbers[j + 2],\n                point.y + numbers[j + 3]\n              )\n              control.x = point.x + numbers[j + 0]\n              control.y = point.y + numbers[j + 1]\n              point.x += numbers[j + 2]\n              point.y += numbers[j + 3]\n              if (j === 0 && doSetFirstPoint === true) firstPoint.copy(point)\n            }\n            break\n\n          case 'q':\n            var numbers = parseFloats(data)\n            for (var j = 0, jl = numbers.length; j < jl; j += 4) {\n              path.quadraticCurveTo(\n                point.x + numbers[j + 0],\n                point.y + numbers[j + 1],\n                point.x + numbers[j + 2],\n                point.y + numbers[j + 3]\n              )\n              control.x = point.x + numbers[j + 0]\n              control.y = point.y + numbers[j + 1]\n              point.x += numbers[j + 2]\n              point.y += numbers[j + 3]\n              if (j === 0 && doSetFirstPoint === true) firstPoint.copy(point)\n            }\n            break\n\n          case 't':\n            var numbers = parseFloats(data)\n            for (var j = 0, jl = numbers.length; j < jl; j += 2) {\n              var rx = getReflection(point.x, control.x)\n              var ry = getReflection(point.y, control.y)\n              path.quadraticCurveTo(rx, ry, point.x + numbers[j + 0], point.y + numbers[j + 1])\n              control.x = rx\n              control.y = ry\n              point.x = point.x + numbers[j + 0]\n              point.y = point.y + numbers[j + 1]\n              if (j === 0 && doSetFirstPoint === true) firstPoint.copy(point)\n            }\n            break\n\n          case 'a':\n            var numbers = parseFloats(data)\n            for (var j = 0, jl = numbers.length; j < jl; j += 7) {\n              var start = point.clone()\n              point.x += numbers[j + 5]\n              point.y += numbers[j + 6]\n              control.x = point.x\n              control.y = point.y\n              parseArcCommand(\n                path,\n                numbers[j],\n                numbers[j + 1],\n                numbers[j + 2],\n                numbers[j + 3],\n                numbers[j + 4],\n                start,\n                point\n              )\n              if (j === 0 && doSetFirstPoint === true) firstPoint.copy(point)\n            }\n            break\n\n          //\n\n          case 'Z':\n          case 'z':\n            path.currentPath.autoClose = true\n            if (path.currentPath.curves.length > 0) {\n              // Reset point to beginning of Path\n              point.copy(firstPoint)\n              path.currentPath.currentPoint.copy(point)\n              isFirstPoint = true\n            }\n            break\n        }\n\n        // console.log( type, parseFloats( data ), parseFloats( data ).length  )\n\n        doSetFirstPoint = false\n      }\n\n      return path\n    }\n\n    /**\n     * https://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes\n     * https://mortoray.com/2017/02/16/rendering-an-svg-elliptical-arc-as-bezier-curves/ Appendix: Endpoint to center arc conversion\n     * From\n     * rx ry x-axis-rotation large-arc-flag sweep-flag x y\n     * To\n     * aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation\n     */\n\n    function parseArcCommand(path, rx, ry, x_axis_rotation, large_arc_flag, sweep_flag, start, end) {\n      x_axis_rotation = (x_axis_rotation * Math.PI) / 180\n\n      // Ensure radii are positive\n      rx = Math.abs(rx)\n      ry = Math.abs(ry)\n\n      // Compute (x1′, y1′)\n      var dx2 = (start.x - end.x) / 2.0\n      var dy2 = (start.y - end.y) / 2.0\n      var x1p = Math.cos(x_axis_rotation) * dx2 + Math.sin(x_axis_rotation) * dy2\n      var y1p = -Math.sin(x_axis_rotation) * dx2 + Math.cos(x_axis_rotation) * dy2\n\n      // Compute (cx′, cy′)\n      var rxs = rx * rx\n      var rys = ry * ry\n      var x1ps = x1p * x1p\n      var y1ps = y1p * y1p\n\n      // Ensure radii are large enough\n      var cr = x1ps / rxs + y1ps / rys\n\n      if (cr > 1) {\n        // scale up rx,ry equally so cr == 1\n        var s = Math.sqrt(cr)\n        rx = s * rx\n        ry = s * ry\n        rxs = rx * rx\n        rys = ry * ry\n      }\n\n      var dq = rxs * y1ps + rys * x1ps\n      var pq = (rxs * rys - dq) / dq\n      var q = Math.sqrt(Math.max(0, pq))\n      if (large_arc_flag === sweep_flag) q = -q\n      var cxp = (q * rx * y1p) / ry\n      var cyp = (-q * ry * x1p) / rx\n\n      // Step 3: Compute (cx, cy) from (cx′, cy′)\n      var cx = Math.cos(x_axis_rotation) * cxp - Math.sin(x_axis_rotation) * cyp + (start.x + end.x) / 2\n      var cy = Math.sin(x_axis_rotation) * cxp + Math.cos(x_axis_rotation) * cyp + (start.y + end.y) / 2\n\n      // Step 4: Compute θ1 and Δθ\n      var theta = svgAngle(1, 0, (x1p - cxp) / rx, (y1p - cyp) / ry)\n      var delta = svgAngle((x1p - cxp) / rx, (y1p - cyp) / ry, (-x1p - cxp) / rx, (-y1p - cyp) / ry) % (Math.PI * 2)\n\n      path.currentPath.absellipse(cx, cy, rx, ry, theta, theta + delta, sweep_flag === 0, x_axis_rotation)\n    }\n\n    function svgAngle(ux, uy, vx, vy) {\n      var dot = ux * vx + uy * vy\n      var len = Math.sqrt(ux * ux + uy * uy) * Math.sqrt(vx * vx + vy * vy)\n      var ang = Math.acos(Math.max(-1, Math.min(1, dot / len))) // floating point precision, slightly over values appear\n      if (ux * vy - uy * vx < 0) ang = -ang\n      return ang\n    }\n\n    /*\n     * According to https://www.w3.org/TR/SVG/shapes.html#RectElementRXAttribute\n     * rounded corner should be rendered to elliptical arc, but bezier curve does the job well enough\n     */\n    function parseRectNode(node, style) {\n      var x = parseFloat(node.getAttribute('x') || 0)\n      var y = parseFloat(node.getAttribute('y') || 0)\n      var rx = parseFloat(node.getAttribute('rx') || 0)\n      var ry = parseFloat(node.getAttribute('ry') || 0)\n      var w = parseFloat(node.getAttribute('width'))\n      var h = parseFloat(node.getAttribute('height'))\n\n      var path = new ShapePath()\n      path.color.setStyle(style.fill)\n      path.moveTo(x + 2 * rx, y)\n      path.lineTo(x + w - 2 * rx, y)\n      if (rx !== 0 || ry !== 0) path.bezierCurveTo(x + w, y, x + w, y, x + w, y + 2 * ry)\n      path.lineTo(x + w, y + h - 2 * ry)\n      if (rx !== 0 || ry !== 0) path.bezierCurveTo(x + w, y + h, x + w, y + h, x + w - 2 * rx, y + h)\n      path.lineTo(x + 2 * rx, y + h)\n\n      if (rx !== 0 || ry !== 0) {\n        path.bezierCurveTo(x, y + h, x, y + h, x, y + h - 2 * ry)\n      }\n\n      path.lineTo(x, y + 2 * ry)\n\n      if (rx !== 0 || ry !== 0) {\n        path.bezierCurveTo(x, y, x, y, x + 2 * rx, y)\n      }\n\n      return path\n    }\n\n    function parsePolygonNode(node, style) {\n      function iterator(match, a, b) {\n        var x = parseFloat(a)\n        var y = parseFloat(b)\n\n        if (index === 0) {\n          path.moveTo(x, y)\n        } else {\n          path.lineTo(x, y)\n        }\n\n        index++\n      }\n\n      var regex = /(-?[\\d\\.?]+)[,|\\s](-?[\\d\\.?]+)/g\n\n      var path = new ShapePath()\n      path.color.setStyle(style.fill)\n\n      var index = 0\n\n      node.getAttribute('points').replace(regex, iterator)\n\n      path.currentPath.autoClose = true\n\n      return path\n    }\n\n    function parsePolylineNode(node, style) {\n      function iterator(match, a, b) {\n        var x = parseFloat(a)\n        var y = parseFloat(b)\n\n        if (index === 0) {\n          path.moveTo(x, y)\n        } else {\n          path.lineTo(x, y)\n        }\n\n        index++\n      }\n\n      var regex = /(-?[\\d\\.?]+)[,|\\s](-?[\\d\\.?]+)/g\n\n      var path = new ShapePath()\n      path.color.setStyle(style.fill)\n\n      var index = 0\n\n      node.getAttribute('points').replace(regex, iterator)\n\n      path.currentPath.autoClose = false\n\n      return path\n    }\n\n    function parseCircleNode(node, style) {\n      var x = parseFloat(node.getAttribute('cx'))\n      var y = parseFloat(node.getAttribute('cy'))\n      var r = parseFloat(node.getAttribute('r'))\n\n      var subpath = new Path()\n      subpath.absarc(x, y, r, 0, Math.PI * 2)\n\n      var path = new ShapePath()\n      path.color.setStyle(style.fill)\n      path.subPaths.push(subpath)\n\n      return path\n    }\n\n    function parseEllipseNode(node, style) {\n      var x = parseFloat(node.getAttribute('cx'))\n      var y = parseFloat(node.getAttribute('cy'))\n      var rx = parseFloat(node.getAttribute('rx'))\n      var ry = parseFloat(node.getAttribute('ry'))\n\n      var subpath = new Path()\n      subpath.absellipse(x, y, rx, ry, 0, Math.PI * 2)\n\n      var path = new ShapePath()\n      path.color.setStyle(style.fill)\n      path.subPaths.push(subpath)\n\n      return path\n    }\n\n    function parseLineNode(node, style) {\n      var x1 = parseFloat(node.getAttribute('x1'))\n      var y1 = parseFloat(node.getAttribute('y1'))\n      var x2 = parseFloat(node.getAttribute('x2'))\n      var y2 = parseFloat(node.getAttribute('y2'))\n\n      var path = new ShapePath()\n      path.moveTo(x1, y1)\n      path.lineTo(x2, y2)\n      path.currentPath.autoClose = false\n\n      return path\n    }\n\n    //\n\n    function parseStyle(node, style) {\n      style = Object.assign({}, style) // clone style\n\n      if (node.hasAttribute('fill')) style.fill = node.getAttribute('fill')\n      if (node.style.fill !== '') style.fill = node.style.fill\n\n      return style\n    }\n\n    function isVisible(style) {\n      return style.fill !== 'none' && style.fill !== 'transparent'\n    }\n\n    // http://www.w3.org/TR/SVG11/implnote.html#PathElementImplementationNotes\n\n    function getReflection(a, b) {\n      return a - (b - a)\n    }\n\n    function parseFloats(string) {\n      var array = string.split(/[\\s,]+|(?=\\s?[+\\-])/)\n\n      for (var i = 0; i < array.length; i++) {\n        var number = array[i]\n\n        // Handle values like 48.6037.7.8\n        // TODO Find a regex for this\n\n        if (number.indexOf('.') !== number.lastIndexOf('.')) {\n          var split = number.split('.')\n\n          for (var s = 2; s < split.length; s++) {\n            array.splice(i + s - 1, 0, '0.' + split[s])\n          }\n        }\n\n        array[i] = parseFloat(number)\n      }\n\n      return array\n    }\n\n    function getNodeTransform(node) {\n      if (!node.hasAttribute('transform')) {\n        return null\n      }\n\n      var transform = parseTransformNode(node)\n\n      if (transform) {\n        if (transformStack.length > 0) {\n          transform.premultiply(transformStack[transformStack.length - 1])\n        }\n\n        currentTransform.copy(transform)\n        transformStack.push(transform)\n      }\n\n      return transform\n    }\n\n    function parseTransformNode(node) {\n      var transform = new Matrix3()\n      var currentTransform = tempTransform0\n      var transformsTexts = node.getAttribute('transform').split(' ')\n\n      for (var tIndex = transformsTexts.length - 1; tIndex >= 0; tIndex--) {\n        var transformText = transformsTexts[tIndex]\n        var openParPos = transformText.indexOf('(')\n        var closeParPos = transformText.indexOf(')')\n\n        if (openParPos > 0 && openParPos < closeParPos) {\n          var transformType = transformText.substr(0, openParPos)\n\n          var array = parseFloats(transformText.substr(openParPos + 1, closeParPos - openParPos - 1))\n\n          currentTransform.identity()\n\n          switch (transformType) {\n            case 'translate':\n              if (array.length >= 1) {\n                var tx = array[0]\n                var ty = tx\n\n                if (array.length >= 2) {\n                  ty = array[1]\n                }\n\n                currentTransform.translate(tx, ty)\n              }\n\n              break\n\n            case 'rotate':\n              if (array.length >= 1) {\n                var angle = 0\n                var cx = 0\n                var cy = 0\n\n                // Angle\n                angle = (-array[0] * Math.PI) / 180\n\n                if (array.length >= 3) {\n                  // Center x, y\n                  cx = array[1]\n                  cy = array[2]\n                }\n\n                // Rotate around center (cx, cy)\n                tempTransform1.identity().translate(-cx, -cy)\n                tempTransform2.identity().rotate(angle)\n                tempTransform3.multiplyMatrices(tempTransform2, tempTransform1)\n                tempTransform1.identity().translate(cx, cy)\n                currentTransform.multiplyMatrices(tempTransform1, tempTransform3)\n              }\n\n              break\n\n            case 'scale':\n              if (array.length >= 1) {\n                var scaleX = array[0]\n                var scaleY = scaleX\n\n                if (array.length >= 2) {\n                  scaleY = array[1]\n                }\n\n                currentTransform.scale(scaleX, scaleY)\n              }\n\n              break\n\n            case 'skewX':\n              if (array.length === 1) {\n                currentTransform.set(1, Math.tan((array[0] * Math.PI) / 180), 0, 0, 1, 0, 0, 0, 1)\n              }\n\n              break\n\n            case 'skewY':\n              if (array.length === 1) {\n                currentTransform.set(1, 0, 0, Math.tan((array[0] * Math.PI) / 180), 1, 0, 0, 0, 1)\n              }\n\n              break\n\n            case 'matrix':\n              if (array.length === 6) {\n                currentTransform.set(array[0], array[2], array[4], array[1], array[3], array[5], 0, 0, 1)\n              }\n\n              break\n          }\n        }\n\n        transform.premultiply(currentTransform)\n      }\n\n      return transform\n    }\n\n    function transformPath(path, m) {\n      function transfVec2(v2) {\n        tempV3.set(v2.x, v2.y, 1).applyMatrix3(m)\n\n        v2.set(tempV3.x, tempV3.y)\n      }\n\n      var isRotated = isTransformRotated(m)\n\n      var tempV2 = new Vector2()\n      var tempV3 = new Vector3()\n\n      var subPaths = path.subPaths\n\n      for (var i = 0, n = subPaths.length; i < n; i++) {\n        var subPath = subPaths[i]\n        var curves = subPath.curves\n\n        for (var j = 0; j < curves.length; j++) {\n          var curve = curves[j]\n\n          if (curve.isLineCurve) {\n            transfVec2(curve.v1)\n            transfVec2(curve.v2)\n          } else if (curve.isCubicBezierCurve) {\n            transfVec2(curve.v0)\n            transfVec2(curve.v1)\n            transfVec2(curve.v2)\n            transfVec2(curve.v3)\n          } else if (curve.isQuadraticBezierCurve) {\n            transfVec2(curve.v0)\n            transfVec2(curve.v1)\n            transfVec2(curve.v2)\n          } else if (curve.isEllipseCurve) {\n            tempV2.set(curve.aX, curve.aY)\n            transfVec2(tempV2)\n            curve.aX = tempV2.x\n            curve.aY = tempV2.y\n\n            curve.xRadius *= getTransformScaleX(m)\n            curve.yRadius *= getTransformScaleY(m)\n          }\n        }\n      }\n    }\n\n    function isTransformRotated(m) {\n      return m.elements[1] !== 0 || m.elements[3] !== 0\n    }\n\n    function getTransformScaleX(m) {\n      var te = m.elements\n      return Math.sqrt(te[0] * te[0] + te[1] * te[1])\n    }\n\n    function getTransformScaleY(m) {\n      var te = m.elements\n      return Math.sqrt(te[3] * te[3] + te[4] * te[4])\n    }\n\n    //\n\n    var paths = []\n\n    var transformStack = []\n\n    var tempTransform0 = new Matrix3()\n    var tempTransform1 = new Matrix3()\n    var tempTransform2 = new Matrix3()\n    var tempTransform3 = new Matrix3()\n\n    var currentTransform = new Matrix3()\n\n    var xml = new DOMParser().parseFromString(text, 'image/svg+xml') // application/xml\n\n    parseNode(xml.documentElement, { fill: '#000' })\n\n    // console.log( paths );\n\n    return paths\n  },\n}\n\nexport { SVGLoader }\n","import * as THREE from \"three\";\nimport React, { useCallback, set, useEffect, useState } from \"react\";\nimport { useSpring, a, interpolate } from \"react-spring/three\";\nimport { animated } from \"react-spring\";\nimport { Canvas } from \"react-three-fiber\";\nimport styled, { createGlobalStyle } from \"styled-components/macro\";\nimport flat from 'lodash-es/flatten'\nimport { SVGLoader } from \"./resources/SVGLoader\";\nimport LogoSVG from \"./resources/logo.svg\";\n\nconsole.log(SVGLoader)\nconst deg = THREE.Math.degToRad\nconst loaders = new Promise(res =>\n  new SVGLoader().load(LogoSVG, shapes =>\n    res(flat(shapes.map((group, index) => group.toShapes(true).map(shape => ({ shape, color: group.color, index })))))\n  )\n)\n\nconst GlobalStyle = createGlobalStyle`\n  canvas {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    pointer-events: none;\n    overflow: hidden;\n  }\n  body{\n    background-color: #f4f4f4;\n  }\n`;\n\nconst FullPage = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: white;\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-template-rows: repeat(3, 1fr);\n  position: relative;\n  box-sizing: border-box;\n  background-color: #f4f4f4;\n  cursor:none;\n  ::after {\n    content: \" \";\n    position: absolute;\n    margin: 24px;\n    width: calc(100% - 48px);\n    height: calc(100% - 48px);\n    border: 1px solid #fff;\n    box-sizing: border-box;\n    z-index: 5;\n    pointer-events: none;\n    mix-blend-mode: difference;\n  }\n`;\n\nconst Logo = styled.div`\n  position: absolute;\n  margin: 50px 70px;\n  left: 0;\n  top: 0;\n  ::after {\n    content: \"acueducto\";\n    color: white;\n    font-weight: 900;\n    font-size: 1.5rem;\n  }\n`;\n\nconst Text = styled.div`\n  padding: 80px;\n  grid-column: 1 / span 3;\n  grid-row: 1 / span 3;\n  font-size: 2.5rem;\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n  z-index: 4;\n  p {\n    max-width: 800px;\n    display: flex;\n    justify-self: center;\n    color: white;\n  }\n`;\n\nconst ThreeFull = styled.div`\n  grid-column: 1 / span 4;\n  z-index: 3;\n  grid-row: 1 / span 3;\n  background-color: black;\n  position: relative;\n`;\n\nfunction Graphic({ mouse, shapes }) {\n  const extrudeSettings = {\n    steps: 10,\n    depth: 700,\n    bevelEnabled: true,\n    bevelThickness: 0,\n    bevelSize: 0,\n    bevelOffset: 0,\n    bevelSegments: 1,\n  }\n  const extrudeSettings2 = {\n    steps: 1,\n    depth: 15,\n    bevelEnabled: false,\n    bevelThickness: 20,\n    bevelSize: 10,\n    bevelOffset: 0,\n    bevelSegments: 1,\n  }\n  const factor = 1000\n  const x = -60\n  const y = 30\n  const z = 0\n  const scaleFactor = 0.05\n  console.log(mouse)\n  return (\n    <a.group\n      scale={[scaleFactor, scaleFactor, scaleFactor]}\n      position={interpolate([mouse], mouse => [(-mouse[0] * factor) / 50000 + x, (mouse[1] * factor) / 50000 + y, z])}>\n      {shapes.map(({ shape }, key) => (\n        <a.mesh key={key} rotation={[deg(0), deg(180), deg(180)]}>\n          <meshStandardMaterial\n            opacity={1}\n            transparent\n            attach=\"material\"\n            color={key === 0 ? '#080b0c' : 'white'}\n            roughness={0.73}\n            side={THREE.DoubleSide}\n            metalness={0.4}\n          />\n          <extrudeBufferGeometry attach=\"geometry\" args={[shape, key === 0 ? extrudeSettings : extrudeSettings2]} />\n        </a.mesh>\n      ))}\n    </a.group>\n  )\n}\n\nfunction Cursor({ mouse }) {\n  const pointLight2 = new THREE.PointLight()\n  return (\n    <a.group position={interpolate([mouse], mouse => [mouse[0] / 5, -mouse[1] / 5, 4])}>\n      <primitive object={pointLight2} color={'white'} intensity={5} sphereSize={1} position={[0, 0, 0]} />\n      <a.mesh position={[0, 0, 0]}>\n        <sphereGeometry attach=\"geometry\" args={[1, 20, 20]} />\n        <meshLambertMaterial attach=\"material\" color=\"white\" refractionRatio={0.95} />\n      </a.mesh>\n    </a.group>\n  )\n}\n\nfunction Scene({ mouse }) {\n  const [shapes, setShape] = useState([])\n  useEffect(() => void loaders.then(setTheShape), [])\n\n  function setTheShape() {\n    void loaders.then(setShape)\n    console.log(shapes, loaders)\n  }\n  const pointLight = new THREE.PointLight()\n\n  return (\n    <>\n      <ambientLight intensity={1} sphereSize={1} color=\"white\" />\n      <spotLight intensity={0} position={[300, 300, 4000]} />\n      <primitive object={pointLight} color={'#2f54b4'} intensity={25} position={[65, 2, 0]} sphereSize={1} />\n      <Cursor mouse={mouse} />\n      <Graphic mouse={mouse} shapes={shapes} />\n    </>\n  )\n}\n\nfunction App() {\n  const [{ mouse }, set] = useSpring(() => ({ mouse: [0, 0] }));\n  const onMouseMove = useCallback(\n    ({ clientX: x, clientY: y }) =>\n      set({ mouse: [x - window.innerWidth / 2, y - window.innerHeight / 2] }),\n    []\n  );\n  return (\n    <FullPage onMouseMove={onMouseMove}>\n      <GlobalStyle />\n      <Text>\n        <Logo />\n        <animated.p\n          style={{\n            transform: mouse.interpolate(\n              (x, y) => `translate3d(${x / 10}px,${y / 10}px,0)`\n            )\n          }}\n        >\n          we’re a creative studio who specializes on inspiring digital\n          strategies and experiences\n        </animated.p>\n      </Text>\n      <ThreeFull>\n      <Canvas\n        invalidateFrameloop\n        camera={{\n          fov: 90,\n          position: [0, 0, 100],\n          rotation: [0, deg(0), deg(0)],\n          near: 0.1,\n          far: 10000,\n        }}>\n          <Scene mouse={mouse} />\n        </Canvas>\n      </ThreeFull>\n    </FullPage>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Test2';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}